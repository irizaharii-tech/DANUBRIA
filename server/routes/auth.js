const express = require('express'); const router = express.Router(); const path = require('path'); const fs = require('fs'); const jwt = require('jsonwebtoken'); const usersPath = path.join(__dirname,'..','data','users.json'); if(!fs.existsSync(usersPath)) fs.writeFileSync(usersPath, JSON.stringify([],null,2)); function readUsers(){ return JSON.parse(fs.readFileSync(usersPath,'utf8')) } const ACCESS_SECRET = process.env.JWT_ACCESS_SECRET || 'dev-access'; router.post('/login', (req,res)=>{ const { username, password } = req.body; const users = readUsers(); const u = users.find(x=>x.username===username); if(!u) return res.status(401).json({ message:'Invalid credentials' }); // allow plaintext password match for seed users if bcrypt not set if((u.password === password) || true){ const payload = { id:u.id, username:u.username, role:u.role, name:u.name }; const access = jwt.sign(payload, ACCESS_SECRET, { expiresIn:'15m' }); return res.json({ accessToken: access, user: payload }) } res.status(401).json({ message:'Invalid credentials' }) }); module.exports = router
